// Code generated by protoc-gen-go. DO NOT EDIT.
// source: say.proto

/*
Package say is a generated protocol buffer package.

It is generated from these files:
	say.proto

It has these top-level messages:
	Something
	Result
*/
package say

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Something struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Something) Reset()                    { *m = Something{} }
func (m *Something) String() string            { return proto.CompactTextString(m) }
func (*Something) ProtoMessage()               {}
func (*Something) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Something) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Result struct {
	Audio []byte `protobuf:"bytes,1,opt,name=audio,proto3" json:"audio,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Result) GetAudio() []byte {
	if m != nil {
		return m.Audio
	}
	return nil
}

func init() {
	proto.RegisterType((*Something)(nil), "say.Something")
	proto.RegisterType((*Result)(nil), "say.Result")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TextToSpeech service

type TextToSpeechClient interface {
	SaySomething(ctx context.Context, in *Something, opts ...grpc.CallOption) (*Result, error)
}

type textToSpeechClient struct {
	cc *grpc.ClientConn
}

func NewTextToSpeechClient(cc *grpc.ClientConn) TextToSpeechClient {
	return &textToSpeechClient{cc}
}

func (c *textToSpeechClient) SaySomething(ctx context.Context, in *Something, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := grpc.Invoke(ctx, "/say.TextToSpeech/SaySomething", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TextToSpeech service

type TextToSpeechServer interface {
	SaySomething(context.Context, *Something) (*Result, error)
}

func RegisterTextToSpeechServer(s *grpc.Server, srv TextToSpeechServer) {
	s.RegisterService(&_TextToSpeech_serviceDesc, srv)
}

func _TextToSpeech_SaySomething_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Something)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextToSpeechServer).SaySomething(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/say.TextToSpeech/SaySomething",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextToSpeechServer).SaySomething(ctx, req.(*Something))
	}
	return interceptor(ctx, in, info, handler)
}

var _TextToSpeech_serviceDesc = grpc.ServiceDesc{
	ServiceName: "say.TextToSpeech",
	HandlerType: (*TextToSpeechServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaySomething",
			Handler:    _TextToSpeech_SaySomething_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "say.proto",
}

func init() { proto.RegisterFile("say.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x4e, 0xac, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x4e, 0xac, 0x54, 0x52, 0xe5, 0xe2, 0x0c, 0xce,
	0xcf, 0x4d, 0x2d, 0xc9, 0xc8, 0xcc, 0x4b, 0x17, 0x92, 0xe0, 0x62, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e,
	0x4c, 0x4f, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x71, 0x95, 0xe4, 0xb8, 0xd8, 0x82,
	0x52, 0x8b, 0x4b, 0x73, 0x4a, 0x84, 0x44, 0xb8, 0x58, 0x13, 0x4b, 0x53, 0x32, 0xf3, 0xc1, 0x2a,
	0x78, 0x82, 0x20, 0x1c, 0x23, 0x6b, 0x2e, 0x9e, 0x90, 0xd4, 0x8a, 0x92, 0x90, 0xfc, 0xe0, 0x82,
	0xd4, 0xd4, 0xe4, 0x0c, 0x21, 0x6d, 0x2e, 0x9e, 0xe0, 0xc4, 0x4a, 0x84, 0xc9, 0x7c, 0x7a, 0x20,
	0x7b, 0xe1, 0x7c, 0x29, 0x6e, 0x30, 0x1f, 0x62, 0x64, 0x12, 0x1b, 0xd8, 0x3d, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x0a, 0x0b, 0x71, 0x9f, 0x9c, 0x00, 0x00, 0x00,
}
